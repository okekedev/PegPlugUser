{"version":3,"names":["AnimatedSvg","Animated","createAnimatedComponent","Svg","width","Dimensions","get","ONE_TURN","LuckyWheel","forwardRef","props","ref","rotate","useRef","Value","current","spinVelocity","containerRef","isSpinning","setIsSpinning","useState","spinCount","setSpinCount","winnerLastOffset","setWinnerLastOffset","px","setPx","py","setPy","rotateInterpolated","interpolate","inputRange","outputRange","outerRadius","useMemo","size","DURATION_IN_MS","duration","SLICE_COUNT","slices","length","SLICE_ANGLE","SLICE_ANGLE_CENTER","SLICE_PAYLOAD","data","Array","from","fill","arcs","d3Shape","pie","instance","arc","padAngle","innerRadius","colors","randomColor","backgroundColorOptions","count","map","index","path","color","text","textStyle","centroid","knobAnim","modulo","divide","subtract","knobInterpolated","startSpinning","useCallback","isGestureSpinning","_value","isSpinningValid","Math","abs","velocity","enablePhysics","round","WINNER_INDEX","winnerIndex","floor","random","WINNER","WINNER_ANGLE","WINNER_ANGLE_OFFSET","Utils","randomNumber","EXTRA_SPIN_DEGREE","TARGET_ANGLE","isEndlessSpinning","waitWinner","loop","timing","toValue","useNativeDriver","easing","Easing","linear","start","out","cubic","inOut","setValue","onSpinningEnd","onSpinningStart","useEffect","resetAnimation","onKnobTick","addListener","value","removeAllListeners","useImperativeHandle","stop","stopAnimation","reset","_panResponder","PanResponder","create","onMoveShouldSetPanResponder","onMoveShouldSetPanResponderCapture","onPanResponderMove","_","gestureState","enableGesture","mappedX","moveX","mappedY","moveY","x","y","top","bottom","left","right","isMoveRight","vx","isMoveLeft","isMoveUp","vy","isMoveBottom","isSpinRight","isSpinLeft","isSingleTouch","numberActiveTouches","isClockwiseEnabled","gestureType","GestureTypes","CLOCKWISE","MULTIDIRECTIONAL","isAntiClockwiseEnabled","ANTI_CLOCKWISE","slowDivider","onPanResponderRelease","isVelocityFastEnough","minimumSpinVelocity","_renderKnob","styles","knob","transform","customKnob","knobSize","knobColor","_renderText","params","source","customText","textAngle","TextAngles","VERTICAL","i","payload","_renderOuterDots","enableOuterDots","dotColor","_renderSlice","_renderCircle","enableInnerShadow","wheel","circle","height","borderRadius","_renderWheel","measure","_fx","_fy","_wheelWidth","_wheelHeight","pxSize","pySize","panHandlers","backgroundColor","container","offset","defaultProps","luminosity","hue","EasingTypes","OUT","StyleSheet","justifyContent","alignItems","zIndex","position","borderColor","borderWidth","opacity","fontSize","fontWeight"],"sources":["LuckyWheel.tsx"],"sourcesContent":["import React, {\n  useRef,\n  useState,\n  useMemo,\n  useEffect,\n  forwardRef,\n  useImperativeHandle,\n  useCallback,\n} from 'react';\nimport {\n  View,\n  Animated,\n  PanResponder,\n  Easing,\n  Dimensions,\n  StyleSheet,\n} from 'react-native';\nimport * as d3Shape from 'd3-shape';\nimport randomColor from 'randomcolor';\n\nimport Svg, { G, Text, Path, Circle } from 'react-native-svg';\n\nimport Knob from './Knob';\n\nimport Utils from '../utils';\n\nimport {\n  ILuckyWheel,\n  LuckyWheelHandle,\n  GestureTypes,\n  TextAngles,\n  EasingTypes,\n  ILuckyWheelOptionalProps,\n  Color,\n  IWheelText,\n} from '../index';\n\nconst AnimatedSvg = Animated.createAnimatedComponent(Svg);\n\nconst { width } = Dimensions.get('screen');\n\nconst ONE_TURN = 360;\n\nconst LuckyWheel = forwardRef<LuckyWheelHandle, ILuckyWheel>((props, ref) => {\n  const rotate = useRef<any>(new Animated.Value(0)).current;\n  const spinVelocity = useRef<any>(new Animated.Value(0)).current;\n  const containerRef = useRef<any>(null);\n\n  const [isSpinning, setIsSpinning] = useState(false);\n  const [spinCount, setSpinCount] = useState(1);\n  const [winnerLastOffset, setWinnerLastOffset] = useState(0);\n\n  const [px, setPx] = useState(0);\n  const [py, setPy] = useState(0);\n\n  const rotateInterpolated = rotate.interpolate({\n    inputRange: [-ONE_TURN, 0, ONE_TURN],\n    outputRange: [`-${ONE_TURN}deg`, '0deg', `${ONE_TURN}deg`],\n  });\n\n  const outerRadius = useMemo(\n    () => props.size / 2 - props.outerRadius,\n    [props.size, props.outerRadius]\n  );\n\n  const DURATION_IN_MS = useMemo(() => props.duration * 1000, [props.duration]);\n\n  const SLICE_COUNT = useMemo(() => props.slices.length, [props.slices]);\n\n  const SLICE_ANGLE = useMemo(() => ONE_TURN / SLICE_COUNT, [SLICE_COUNT]);\n  const SLICE_ANGLE_CENTER = useMemo(() => SLICE_ANGLE / 2, [SLICE_ANGLE]);\n\n  const SLICE_PAYLOAD = useMemo(() => {\n    const data: any = Array.from({ length: SLICE_COUNT }).fill(1);\n    const arcs = d3Shape.pie()(data);\n    const instance = d3Shape\n      .arc()\n      .padAngle(props.padAngle)\n      .outerRadius(outerRadius)\n      .innerRadius(props.innerRadius);\n\n    const colors = randomColor({\n      ...props.backgroundColorOptions,\n      count: SLICE_COUNT,\n    });\n\n    return arcs.map((arc: any, index: number) => {\n      return {\n        path: instance(arc),\n        color: props.slices[index].color ?? colors[index % colors.length],\n        text: props.slices[index].text,\n        textStyle: props.slices[index].textStyle,\n        centroid: instance.centroid(arc),\n      };\n    });\n  }, [\n    props.padAngle,\n    props.innerRadius,\n    outerRadius,\n    props.backgroundColorOptions,\n    props.slices,\n    SLICE_COUNT,\n  ]);\n\n  const knobAnim = Animated.modulo(\n    Animated.divide(\n      Animated.modulo(Animated.subtract(rotate, SLICE_ANGLE_CENTER), ONE_TURN),\n      new Animated.Value(SLICE_ANGLE)\n    ),\n    1\n  );\n\n  const knobInterpolated = knobAnim.interpolate({\n    inputRange: [-1, -0.5, -0.0001, 0.0001, 0.5, 1],\n    outputRange: ['0deg', '0deg', '35deg', '-35deg', '0deg', '0deg'],\n  });\n\n  const startSpinning = useCallback(() => {\n    if (!isSpinning) setIsSpinning(true);\n\n    const isGestureSpinning = spinVelocity._value !== 0;\n    const isSpinningValid = Math.abs(spinVelocity._value) >= 1;\n    const velocity =\n      isGestureSpinning && props.enablePhysics && isSpinningValid\n        ? Math.round(Math.abs(spinVelocity._value))\n        : 1;\n\n    const WINNER_INDEX =\n      props.winnerIndex ?? Math.floor(Math.random() * SLICE_COUNT);\n    const WINNER = props.slices[WINNER_INDEX];\n\n    const WINNER_ANGLE = WINNER_INDEX * (ONE_TURN / SLICE_COUNT);\n    const WINNER_ANGLE_OFFSET = Utils.randomNumber(\n      -SLICE_ANGLE_CENTER + SLICE_ANGLE / 3,\n      SLICE_ANGLE_CENTER - SLICE_ANGLE / 3\n    );\n\n    const EXTRA_SPIN_DEGREE = ONE_TURN * props.duration * spinCount * velocity;\n\n    const TARGET_ANGLE =\n      ONE_TURN -\n      WINNER_ANGLE +\n      EXTRA_SPIN_DEGREE -\n      winnerLastOffset +\n      WINNER_ANGLE_OFFSET;\n\n    const isEndlessSpinning = props.waitWinner && !props.winnerIndex;\n\n    if (isEndlessSpinning) {\n      Animated.loop(\n        Animated.timing(rotate, {\n          toValue: EXTRA_SPIN_DEGREE * 4,\n          duration: DURATION_IN_MS,\n          useNativeDriver: true,\n          easing: Easing.linear,\n        })\n      ).start();\n    } else {\n      Animated.timing(rotate, {\n        toValue: TARGET_ANGLE,\n        duration: DURATION_IN_MS,\n        easing:\n          props.easing === 'out'\n            ? Easing.out(Easing.cubic)\n            : Easing.inOut(Easing.cubic),\n        useNativeDriver: true,\n      }).start(() => {\n        setIsSpinning(false);\n        spinVelocity.setValue(0);\n\n        if (props.onSpinningEnd) props.onSpinningEnd(WINNER);\n      });\n    }\n\n    if (props.onSpinningStart) props.onSpinningStart();\n\n    setWinnerLastOffset(WINNER_ANGLE_OFFSET);\n    setSpinCount(spinCount + 1);\n  }, [\n    DURATION_IN_MS,\n    SLICE_ANGLE,\n    SLICE_ANGLE_CENTER,\n    SLICE_COUNT,\n    isSpinning,\n    props,\n    rotate,\n    spinCount,\n    spinVelocity,\n    winnerLastOffset,\n  ]);\n\n  useEffect(() => {\n    if (isSpinning && props.waitWinner && props.winnerIndex) {\n      rotate.resetAnimation(() => {\n        startSpinning();\n      });\n    }\n  }, [isSpinning, props.waitWinner, props.winnerIndex, rotate, startSpinning]);\n\n  useEffect(() => {\n    if (props.onKnobTick) {\n      knobAnim.addListener(({ value }) => {\n        if (value > 0.7) {\n          if (props.onKnobTick) props.onKnobTick();\n        }\n      });\n    } else {\n      knobAnim.removeAllListeners();\n    }\n  }, [knobAnim, props]);\n\n  useImperativeHandle(ref, () => ({\n    start: () => {\n      startSpinning();\n    },\n    stop: () => {\n      rotate.stopAnimation();\n    },\n    reset: () => {\n      rotate.resetAnimation();\n    },\n  }));\n\n  const _panResponder = PanResponder.create({\n    onMoveShouldSetPanResponder: () => true,\n    onMoveShouldSetPanResponderCapture: () => true,\n    onPanResponderMove: (_, gestureState) => {\n      if (!props.enableGesture || isSpinning) {\n        return;\n      }\n\n      const mappedX = gestureState.moveX - px;\n      const mappedY = gestureState.moveY - py;\n\n      const x = mappedX < 0 ? 0 : mappedX > 300 ? props.size : mappedX;\n      const y = mappedY < 0 ? 0 : mappedY > 300 ? props.size : mappedY;\n\n      const top = y < props.size / 2;\n      const bottom = y > props.size / 2;\n      const left = x < props.size / 2;\n      const right = x > props.size / 2;\n\n      // console.log({x, y, top, bottom, left, right});\n\n      const isMoveRight = gestureState.vx > 0;\n      const isMoveLeft = gestureState.vx < 0;\n      const isMoveUp = gestureState.vy < 0;\n      const isMoveBottom = gestureState.vy > 0;\n\n      // console.log({isMoveRight, isMoveLeft, isMoveUp, isMoveBottom});\n\n      const isSpinRight =\n        (top && isMoveRight) ||\n        (bottom && isMoveLeft) ||\n        (top && right && isMoveBottom) ||\n        (bottom && left && isMoveUp);\n      const isSpinLeft =\n        ((top && isMoveLeft) ||\n          (bottom && isMoveRight) ||\n          (top && left && isMoveBottom) ||\n          (bottom && right && isMoveUp)) &&\n        !isSpinRight;\n\n      // console.log({isSpinRight, isSpinLeft});\n\n      const isSingleTouch = gestureState.numberActiveTouches === 1;\n      // const isRightMove = gestureState.vx < 0;\n\n      const isClockwiseEnabled =\n        props.gestureType === GestureTypes.CLOCKWISE ||\n        props.gestureType === GestureTypes.MULTIDIRECTIONAL;\n      const isAntiClockwiseEnabled =\n        props.gestureType === GestureTypes.ANTI_CLOCKWISE ||\n        props.gestureType === GestureTypes.MULTIDIRECTIONAL;\n\n      // set spin velocity\n      if (\n        (isSpinRight && isClockwiseEnabled) ||\n        (isSpinLeft && isAntiClockwiseEnabled)\n      ) {\n        if (rotate._value === 0) {\n          spinVelocity.setValue(gestureState.vx);\n        } else {\n          spinVelocity.setValue((gestureState.vx + spinVelocity._value) / 2);\n        }\n      }\n\n      const slowDivider = 15;\n\n      if (isClockwiseEnabled && isSingleTouch && isSpinRight) {\n        rotate.setValue((rotate._value + x / slowDivider) % 360);\n      }\n\n      if (isAntiClockwiseEnabled && isSingleTouch && isSpinLeft) {\n        rotate.setValue((rotate._value - x / slowDivider) % 360);\n      }\n    },\n    onPanResponderRelease: () => {\n      if (!props.enableGesture || isSpinning) {\n        return;\n      }\n\n      const isVelocityFastEnough =\n        Math.abs(spinVelocity._value) > props.minimumSpinVelocity;\n\n      if (isVelocityFastEnough) {\n        startSpinning();\n      }\n    },\n  });\n\n  const _renderKnob = () => {\n    return (\n      <Animated.View\n        style={[\n          styles.knob,\n          {\n            transform: [\n              {\n                rotate: knobInterpolated,\n              },\n            ],\n          },\n        ]}\n      >\n        {props.customKnob ? (\n          props.customKnob({ size: props.knobSize, color: props.knobColor })\n        ) : (\n          <Knob size={props.knobSize} color={props.knobColor} />\n        )}\n      </Animated.View>\n    );\n  };\n\n  const _renderText = (params: IWheelText) => {\n    if (props.source) return null;\n\n    if (props.customText) {\n      return props.customText(params);\n    }\n\n    if (props.textAngle === TextAngles.VERTICAL) {\n      return (\n        <G\n          rotation={\n            (params.i * ONE_TURN) / SLICE_COUNT + SLICE_ANGLE_CENTER + 90\n          }\n          origin={`${params.x}, ${params.y}`}\n        >\n          <Text\n            x={params.x - props.size / 7}\n            y={params.y}\n            fill={\n              params.payload.textStyle?.color ??\n              props.textStyle?.color ??\n              styles.text.color\n            }\n            {...props.textStyle}\n            {...params.payload.textStyle}\n          >\n            {params.payload.text}\n          </Text>\n        </G>\n      );\n    }\n\n    return (\n      <G\n        rotation={(params.i * ONE_TURN) / SLICE_COUNT + SLICE_ANGLE_CENTER}\n        origin={`${params.x}, ${params.y}`}\n      >\n        <Text\n          x={params.x - params.payload.text.length * 5}\n          y={params.y - props.size / 8}\n          fill={\n            params.payload.textStyle?.color ??\n            props.textStyle?.color ??\n            styles.text.color\n          }\n          {...props.textStyle}\n          {...params.payload.textStyle}\n        >\n          {params.payload.text}\n        </Text>\n      </G>\n    );\n  };\n\n  const _renderOuterDots = (x: number, y: number, i: number) => {\n    if (!props.enableOuterDots) {\n      return null;\n    }\n\n    return (\n      <Circle\n        origin={`${x}, ${y}`}\n        rotation={(i * ONE_TURN) / SLICE_COUNT + SLICE_ANGLE_CENTER}\n        cx={x + outerRadius + 2.5}\n        cy={\n          y +\n          SLICE_ANGLE -\n          SLICE_COUNT * 2 +\n          props.innerRadius / 2 +\n          props.innerRadius / 100\n        }\n        r=\"4\"\n        fill={props.dotColor}\n      />\n    );\n  };\n\n  const _renderSlice = (path: any, color: Color) => {\n    return <Path d={path} strokeWidth={2} fill={color} />;\n  };\n\n  const _renderCircle = () => {\n    if (!props.enableInnerShadow) return false;\n\n    return (\n      <Animated.View\n        style={{\n          ...styles.wheel,\n          ...styles.circle,\n          width: props.size - (props.size - outerRadius * 2),\n          height: props.size - (props.size - outerRadius * 2),\n          borderRadius: props.size / 2,\n        }}\n      />\n    );\n  };\n\n  const _renderWheel = () => {\n    if (props.source) {\n      return (\n        <Animated.Image\n          ref={containerRef}\n          onLayout={() => {\n            containerRef?.current?.measure(\n              (\n                _fx: number,\n                _fy: number,\n                _wheelWidth: number,\n                _wheelHeight: number,\n                pxSize: number,\n                pySize: number\n              ) => {\n                setPx(pxSize);\n                setPy(pySize);\n              }\n            );\n          }}\n          style={{\n            ...styles.wheel,\n            width: props.size,\n            height: props.size,\n            transform: [{ rotate: rotateInterpolated }],\n          }}\n          source={props.source}\n          {..._panResponder.panHandlers}\n        />\n      );\n    }\n\n    return (\n      <Animated.View\n        ref={containerRef}\n        onLayout={() => {\n          if (containerRef.current) {\n            containerRef.current.measure(\n              (\n                _fx: number,\n                _fy: number,\n                _wheelWidth: number,\n                _wheelHeight: number,\n                pxSize: number,\n                pySize: number\n              ) => {\n                setPx(pxSize);\n                setPy(pySize);\n              }\n            );\n          }\n        }}\n        style={{\n          ...styles.wheel,\n          transform: [\n            {\n              rotate: rotateInterpolated,\n            },\n          ],\n          backgroundColor: props.backgroundColor,\n          width: props.size,\n          height: props.size,\n          borderRadius: props.size / 2,\n        }}\n        {..._panResponder.panHandlers}\n      >\n        <AnimatedSvg\n          style={{\n            transform: [{ rotate: `-${SLICE_ANGLE_CENTER}deg` }],\n          }}\n        >\n          <G y={props.size / 2} x={props.size / 2}>\n            {SLICE_PAYLOAD.map((payload, i) => {\n              const [x, y] = payload.centroid;\n              return (\n                <G key={`arc-${i}`}>\n                  {_renderSlice(payload.path, payload.color)}\n                  {_renderText({ x, y, payload, i })}\n                  {_renderOuterDots(x, y, i)}\n                </G>\n              );\n            })}\n          </G>\n        </AnimatedSvg>\n        {_renderCircle()}\n      </Animated.View>\n    );\n  };\n\n  return (\n    <View style={styles.container}>\n      {_renderKnob()}\n      <View\n        style={{\n          transform: [\n            {\n              rotate: `${props.offset}deg`,\n            },\n          ],\n        }}\n      >\n        {_renderWheel()}\n      </View>\n    </View>\n  );\n});\n\nconst defaultProps: ILuckyWheelOptionalProps = {\n  duration: 4,\n  innerRadius: 30,\n  outerRadius: 13,\n  padAngle: 0.01,\n  backgroundColor: '#FFF',\n  size: width - 40,\n  textAngle: TextAngles.VERTICAL,\n  backgroundColorOptions: {\n    luminosity: 'dark',\n    hue: 'random',\n  },\n  knobSize: 30,\n  knobColor: '#FF0000',\n  textStyle: {},\n  easing: EasingTypes.OUT,\n  dotColor: '#000',\n  minimumSpinVelocity: 1,\n  enableGesture: false,\n  enableOuterDots: true,\n  enablePhysics: false,\n  gestureType: GestureTypes.CLOCKWISE,\n  offset: 0,\n  waitWinner: false,\n  enableInnerShadow: true,\n};\n\nLuckyWheel.defaultProps = defaultProps;\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    zIndex: 1,\n  },\n  wheel: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  circle: {\n    position: 'absolute',\n    backgroundColor: 'transparent',\n    borderColor: '#000',\n    borderWidth: 15,\n    opacity: 0.3,\n  },\n  knob: {\n    justifyContent: 'flex-end',\n    zIndex: 1,\n  },\n  text: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: '#FFF',\n  },\n});\n\nexport default LuckyWheel;\n"],"mappings":"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"}