import { type SharedValue } from 'react-native-reanimated';
import type { ConfettiProps } from '../types';
type Strict<T> = T extends undefined ? never : T;
type MinimalBox = {
    colorIndex: number;
    sizeIndex: number;
};
export declare const useConfettiLogic: <T extends MinimalBox>({ sizeVariations, colors, boxes, }: {
    count: Strict<ConfettiProps["count"]>;
    colors: Strict<ConfettiProps["colors"]>;
    boxes: SharedValue<T[]>;
    sizeVariations: {
        width: number;
        height: number;
        radius: number;
    }[];
}) => {
    texture: SharedValue<import("@shopify/react-native-skia").SkImage | null>;
    sprites: import("react-native-reanimated").DerivedValue<import("@shopify/react-native-skia").SkHostRect[]>;
};
export {};
//# sourceMappingURL=useConfettiLogic.d.ts.map